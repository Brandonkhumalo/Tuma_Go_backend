# Generated by Django 5.2.1 on 2025-07-02 15:02

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='BlacklistedToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=255, unique=True)),
                ('blacklisted_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('role', models.CharField(choices=[('user', 'User'), ('driver', 'Driver')], default='user', max_length=10)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('fcm_token', models.CharField(blank=True, max_length=255, null=True)),
                ('remember', models.BooleanField(default=False)),
                ('phone_number', models.CharField(max_length=13)),
                ('name', models.CharField(max_length=100)),
                ('surname', models.CharField(max_length=50)),
                ('rating', models.DecimalField(decimal_places=1, default=5, max_digits=3)),
                ('rating_count', models.PositiveIntegerField(default=0)),
                ('identity_number', models.CharField(blank=True, max_length=20, null=True)),
                ('streetAdress', models.CharField(max_length=20)),
                ('addressLine', models.CharField(blank=True, max_length=20, null=True)),
                ('city', models.CharField(max_length=20)),
                ('province', models.CharField(max_length=20)),
                ('postalCode', models.CharField(max_length=20)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pictures/')),
                ('identity_picture', models.ImageField(blank=True, null=True, upload_to='id_pictures/')),
                ('license', models.ImageField(blank=True, null=True, upload_to='License/')),
                ('verifiedEmail', models.BooleanField(default=False)),
                ('driver_online', models.BooleanField(default=False)),
                ('driver_available', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TripRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delivery_details', models.JSONField()),
                ('accepted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('requester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TermsAndConditions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('terms_and_conditions', models.BooleanField(default=False)),
                ('date', models.DateField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='terms_and_conditions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DriverVehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delivery_vehicle', models.CharField(max_length=50)),
                ('vehicle_name', models.CharField(max_length=50)),
                ('number_plate', models.CharField(max_length=50)),
                ('color', models.CharField(max_length=50)),
                ('vehicle_model', models.CharField(max_length=50)),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='driver_vehicles', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DriverLocations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.CharField(blank=True, max_length=50, null=True)),
                ('longitude', models.CharField(blank=True, max_length=50, null=True)),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='driver_locations', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DriverFinances',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('earnings', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('charges', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('profit', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('month_start', models.DateField(blank=True, null=True)),
                ('month_end', models.DateField(blank=True, null=True)),
                ('week_start', models.DateField(blank=True, null=True)),
                ('week_end', models.DateField(blank=True, null=True)),
                ('today', models.DateField(blank=True, null=True)),
                ('total_trips', models.IntegerField(default=0)),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='driver_finances', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Delivery',
            fields=[
                ('delivery_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('waiting_time', models.DateTimeField(blank=True, null=True)),
                ('origin_lat', models.FloatField(blank=True, null=True)),
                ('origin_lng', models.FloatField(blank=True, null=True)),
                ('destination_lat', models.FloatField(blank=True, null=True)),
                ('destination_lng', models.FloatField(blank=True, null=True)),
                ('date', models.DateField(auto_now_add=True)),
                ('vehicle', models.CharField(blank=True, max_length=50, null=True)),
                ('fare', models.DecimalField(decimal_places=2, max_digits=6)),
                ('payment_method', models.CharField(max_length=50)),
                ('successful', models.BooleanField(default=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='client_deliveries', to=settings.AUTH_USER_MODEL)),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='driver_deliveries', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
